name: Quality

on:
  pull_request:
    branches: ['production']
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: 
      name: 'test'
    steps:
      - name: Run test cases
        run: echo test success
      - name: Generate report
        run: echo report generated
    outputs:
      report_url: https://lipsum.com/


  release_draft:
    runs-on: ubuntu-latest
    needs: ['test']
    environment:
      name: 'release'
      url: ${{ steps.create_release.outputs.html_url }}
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v.${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: true
          prerelease: false
          body: |
            ## Software Revision Number
            v.${{ github.run_number }}
            
            ## Reason for change
            v.${{ github.event.body }}        
            
            ## Changes made 
            v.${{ github.event.pull_request.body }}
            
            ## Test cases created and/or changed
            
            ## Risk assessment
          
      - name: Download report      
        run: curl ${{ needs.test.outputs.report_url }} > test-report.pdf
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./test-report.pdf
          asset_name: test-report.pdf
          asset_content_type: application/pdf

  approve_release:
    runs-on: ubuntu-latest
    environment: 
      name: 'quality'
    needs: ['release_draft']
    steps:
      - name: Run a one-line script 2
        run: echo Hello, world 2!

  publish_release:
    runs-on: ubuntu-latest  
    needs: ['release_draft', 'approve_release']
    environment:
      name: 'release'
      url: ${{ github.server_url }}/${{ github.repository }}/releases/tag/v.${{ github.run_number }}
    steps:
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.release_draft.outputs.release_id }}
